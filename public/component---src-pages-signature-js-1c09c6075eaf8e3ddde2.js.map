{"version":3,"sources":["webpack:///./node_modules/signature_pad/dist/signature_pad.m.js","webpack:///./src/signatureSrc/SignatureCanvas.js","webpack:///./src/pages/signature.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/trim-canvas/build/index.js"],"names":["Point","[object Object]","x","y","time","this","Date","now","start","Math","sqrt","pow","other","distanceTo","Bezier","startPoint","control2","control1","endPoint","startWidth","endWidth","points","widths","c2","calculateControlPoints","c3","c1","end","s1","s2","s3","dx1","dy1","dx2","dy2","m1","m2","l1","l2","k","cm","tx","ty","px","py","length","i","t","cx","point","cy","xdiff","ydiff","SignaturePad","canvas","options","_handleMouseDown","event","which","_mouseButtonDown","_strokeBegin","_handleMouseMove","_strokeMoveUpdate","_handleMouseUp","_strokeEnd","_handleTouchStart","preventDefault","targetTouches","touch","changedTouches","_handleTouchMove","_handleTouchEnd","target","velocityFilterWeight","minWidth","maxWidth","throttle","minDistance","fn","wait","result","storedContext","storedArgs","previous","timeout","later","apply","args","remaining","clearTimeout","window","setTimeout","prototype","_strokeUpdate","dotSize","penColor","backgroundColor","onBegin","onEnd","_ctx","getContext","clear","on","ctx","fillStyle","clearRect","width","height","fillRect","_data","_reset","_isEmpty","dataUrl","callback","image","Image","ratio","devicePixelRatio","onload","drawImage","onerror","error","src","type","encoderOptions","_toSVG","toDataURL","style","touchAction","msTouchAction","PointerEvent","_handlePointerEvents","_handleMouseEvents","_handleTouchEvents","removeEventListener","document","pointGroups","_fromData","color","curve","_drawCurve","_drawDot","newPointGroup","push","clientX","clientY","_createPoint","lastPointGroup","lastPoints","lastPoint","isLastPointTooClose","_addPoint","addEventListener","_lastPoints","_lastVelocity","_lastWidth","rect","getBoundingClientRect","left","top","getTime","unshift","_calculateCurveWidths","fromPoints","shift","velocity","velocityFrom","newWidth","_strokeWidth","max","moveTo","arc","PI","widthDelta","drawSteps","floor","beginPath","tt","ttt","u","uu","uuu","_drawCurveSegment","closePath","fill","drawCurve","drawDot","group","j","basicPoint","maxX","maxY","svg","createElementNS","setAttribute","toString","path","createElement","isNaN","attr","toFixed","appendChild","circle","header","body","innerHTML","undefined","dummy","nodes","childNodes","cloneNode","btoa","signature_pad_m","SignatureCanvas","_sigPad","_excludeOurProps","_this$props","_this","props","canvasProps","clearOnResize","objectWithoutPropertiesLoose_default","getCanvas","_canvas","getTrimmedCanvas","copy","trimCanvas","getSignaturePad","_checkClearOnResize","_resizeCanvas","offsetWidth","offsetHeight","scale","off","isEmpty","fromDataURL","dataURL","fromData","toData","componentDidMount","componentWillUnmount","componentDidUpdate","Object","assign","render","_this2","react_default","a","ref","Component","propTypes","PropTypes","number","oneOfType","func","string","object","bool","defaultProps","Signature","_React$Component","call","sigPad","trim","setState","trimmedDataURL","state","className","styles","container","sigContainer","SignatureCanvas_SignatureCanvas","gatsby_browser_entry","to","buttons","onClick","sigImage","React","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","isRequired","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","e","r","o","id","loaded","c","p","red","green","blue","alpha","f","defineProperty","value","getImageData","data","l","s","putImageData"],"mappings":"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","file":"component---src-pages-signature-js-1c09c6075eaf8e3ddde2.js","sourcesContent":["/*!\n * Signature Pad v3.0.0-beta.3 | https://github.com/szimek/signature_pad\n * (c) 2018 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n    constructor(x, y, time) {\n        this.x = x;\n        this.y = y;\n        this.time = time || Date.now();\n    }\n    distanceTo(start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y && this.time === other.time;\n    }\n    velocityFrom(start) {\n        return (this.time !== start.time) ? this.distanceTo(start) / (this.time - start.time) : 0;\n    }\n}\n\nclass Bezier {\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    static fromPoints(points, widths) {\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    }\n    static calculateControlPoints(s1, s2, s3) {\n        const dx1 = s1.x - s2.x;\n        const dy1 = s1.y - s2.y;\n        const dx2 = s2.x - s3.x;\n        const dy2 = s2.y - s3.y;\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        const l1 = Math.sqrt((dx1 * dx1) + (dy1 * dy1));\n        const l2 = Math.sqrt((dx2 * dx2) + (dy2 * dy2));\n        const dxm = (m1.x - m2.x);\n        const dym = (m1.y - m2.y);\n        const k = l2 / (l1 + l2);\n        const cm = { x: m2.x + (dxm * k), y: m2.y + (dym * k) };\n        const tx = s2.x - cm.x;\n        const ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty),\n        };\n    }\n    length() {\n        const steps = 10;\n        let length = 0;\n        let px;\n        let py;\n        for (let i = 0; i <= steps; i += 1) {\n            const t = i / steps;\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                const xdiff = cx - px;\n                const ydiff = cy - py;\n                length += Math.sqrt((xdiff * xdiff) + (ydiff * ydiff));\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    }\n    point(t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    }\n}\n\nfunction throttle(fn, wait = 250) {\n    let previous = 0;\n    let timeout = null;\n    let result;\n    let storedContext;\n    let storedArgs;\n    const later = () => {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function (...args) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nclass SignaturePad {\n    constructor(canvas, options = {}) {\n        this.canvas = canvas;\n        this.options = options;\n        this._handleMouseDown = (event) => {\n            if (event.which === 1) {\n                this._mouseButtonDown = true;\n                this._strokeBegin(event);\n            }\n        };\n        this._handleMouseMove = (event) => {\n            if (this._mouseButtonDown) {\n                this._strokeMoveUpdate(event);\n            }\n        };\n        this._handleMouseUp = (event) => {\n            if (event.which === 1 && this._mouseButtonDown) {\n                this._mouseButtonDown = false;\n                this._strokeEnd(event);\n            }\n        };\n        this._handleTouchStart = (event) => {\n            event.preventDefault();\n            if (event.targetTouches.length === 1) {\n                const touch = event.changedTouches[0];\n                this._strokeBegin(touch);\n            }\n        };\n        this._handleTouchMove = (event) => {\n            event.preventDefault();\n            const touch = event.targetTouches[0];\n            this._strokeMoveUpdate(touch);\n        };\n        this._handleTouchEnd = (event) => {\n            const wasCanvasTouched = event.target === this.canvas;\n            if (wasCanvasTouched) {\n                event.preventDefault();\n                const touch = event.changedTouches[0];\n                this._strokeEnd(touch);\n            }\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = ('throttle' in options ? options.throttle : 16);\n        this.minDistance = ('minDistance' in options ? options.minDistance : 5);\n        if (this.throttle) {\n            this._strokeMoveUpdate = throttle(SignaturePad.prototype._strokeUpdate, this.throttle);\n        }\n        else {\n            this._strokeMoveUpdate = SignaturePad.prototype._strokeUpdate;\n        }\n        this.dotSize = options.dotSize || function () {\n            return (this.minWidth + this.maxWidth) / 2;\n        };\n        this.penColor = options.penColor || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this.onBegin = options.onBegin;\n        this.onEnd = options.onEnd;\n        this._ctx = canvas.getContext('2d');\n        this.clear();\n        this.on();\n    }\n    clear() {\n        const ctx = this._ctx;\n        const canvas = this.canvas;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._data = [];\n        this._reset();\n        this._isEmpty = true;\n    }\n    fromDataURL(dataUrl, options = {}, callback) {\n        const image = new Image();\n        const ratio = options.ratio || window.devicePixelRatio || 1;\n        const width = options.width || (this.canvas.width / ratio);\n        const height = options.height || (this.canvas.height / ratio);\n        this._reset();\n        image.onload = () => {\n            this._ctx.drawImage(image, 0, 0, width, height);\n            if (callback) {\n                callback();\n            }\n        };\n        image.onerror = (error) => {\n            if (callback) {\n                callback(error);\n            }\n        };\n        image.src = dataUrl;\n        this._isEmpty = false;\n    }\n    toDataURL(type = 'image/png', encoderOptions) {\n        switch (type) {\n            case 'image/svg+xml':\n                return this._toSVG();\n            default:\n                return this.canvas.toDataURL(type, encoderOptions);\n        }\n    }\n    on() {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        if (window.PointerEvent) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    }\n    off() {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handleMouseDown);\n        this.canvas.removeEventListener('pointermove', this._handleMouseMove);\n        document.removeEventListener('pointerup', this._handleMouseUp);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n        document.removeEventListener('mouseup', this._handleMouseUp);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n        this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n    }\n    isEmpty() {\n        return this._isEmpty;\n    }\n    fromData(pointGroups) {\n        this.clear();\n        this._fromData(pointGroups, ({ color, curve }) => this._drawCurve({ color, curve }), ({ color, point }) => this._drawDot({ color, point }));\n        this._data = pointGroups;\n    }\n    toData() {\n        return this._data;\n    }\n    _strokeBegin(event) {\n        const newPointGroup = {\n            color: this.penColor,\n            points: [],\n        };\n        this._data.push(newPointGroup);\n        this._reset();\n        this._strokeUpdate(event);\n        if (typeof this.onBegin === 'function') {\n            this.onBegin(event);\n        }\n    }\n    _strokeUpdate(event) {\n        const x = event.clientX;\n        const y = event.clientY;\n        const point = this._createPoint(x, y);\n        const lastPointGroup = this._data[this._data.length - 1];\n        const lastPoints = lastPointGroup.points;\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        const isLastPointTooClose = lastPoint ? point.distanceTo(lastPoint) <= this.minDistance : false;\n        const color = lastPointGroup.color;\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            const curve = this._addPoint(point);\n            if (!lastPoint) {\n                this._drawDot({ color, point });\n            }\n            else if (curve) {\n                this._drawCurve({ color, curve });\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n            });\n        }\n    }\n    _strokeEnd(event) {\n        this._strokeUpdate(event);\n        if (typeof this.onEnd === 'function') {\n            this.onEnd(event);\n        }\n    }\n    _handlePointerEvents() {\n        this._mouseButtonDown = false;\n        this.canvas.addEventListener('pointerdown', this._handleMouseDown);\n        this.canvas.addEventListener('pointermove', this._handleMouseMove);\n        document.addEventListener('pointerup', this._handleMouseUp);\n    }\n    _handleMouseEvents() {\n        this._mouseButtonDown = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n        this.canvas.addEventListener('mousemove', this._handleMouseMove);\n        document.addEventListener('mouseup', this._handleMouseUp);\n    }\n    _handleTouchEvents() {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n        this.canvas.addEventListener('touchmove', this._handleTouchMove);\n        this.canvas.addEventListener('touchend', this._handleTouchEnd);\n    }\n    _reset() {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (this.minWidth + this.maxWidth) / 2;\n        this._ctx.fillStyle = this.penColor;\n    }\n    _createPoint(x, y) {\n        const rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, new Date().getTime());\n    }\n    _addPoint(point) {\n        const { _lastPoints } = this;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2]);\n            const curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    }\n    _calculateCurveWidths(startPoint, endPoint) {\n        const velocity = (this.velocityFilterWeight * endPoint.velocityFrom(startPoint))\n            + ((1 - this.velocityFilterWeight) * this._lastVelocity);\n        const newWidth = this._strokeWidth(velocity);\n        const widths = {\n            end: newWidth,\n            start: this._lastWidth,\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    }\n    _strokeWidth(velocity) {\n        return Math.max(this.maxWidth / (velocity + 1), this.minWidth);\n    }\n    _drawCurveSegment(x, y, width) {\n        const ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    }\n    _drawCurve({ color, curve }) {\n        const ctx = this._ctx;\n        const widthDelta = curve.endWidth - curve.startWidth;\n        const drawSteps = Math.floor(curve.length()) * 2;\n        ctx.beginPath();\n        ctx.fillStyle = color;\n        for (let i = 0; i < drawSteps; i += 1) {\n            const t = i / drawSteps;\n            const tt = t * t;\n            const ttt = tt * t;\n            const u = 1 - t;\n            const uu = u * u;\n            const uuu = uu * u;\n            let x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            let y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            const width = curve.startWidth + (ttt * widthDelta);\n            this._drawCurveSegment(x, y, width);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n    _drawDot({ color, point }) {\n        const ctx = this._ctx;\n        const width = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = color;\n        ctx.fill();\n    }\n    _fromData(pointGroups, drawCurve, drawDot) {\n        for (const group of pointGroups) {\n            const { color, points } = group;\n            if (points.length > 1) {\n                for (let j = 0; j < points.length; j += 1) {\n                    const basicPoint = points[j];\n                    const point = new Point(basicPoint.x, basicPoint.y, basicPoint.time);\n                    this.penColor = color;\n                    if (j === 0) {\n                        this._reset();\n                    }\n                    const curve = this._addPoint(point);\n                    if (curve) {\n                        drawCurve({ color, curve });\n                    }\n                }\n            }\n            else {\n                this._reset();\n                drawDot({\n                    color,\n                    point: points[0],\n                });\n            }\n        }\n    }\n    _toSVG() {\n        const pointGroups = this._data;\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\n        const minX = 0;\n        const minY = 0;\n        const maxX = this.canvas.width / ratio;\n        const maxY = this.canvas.height / ratio;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', this.canvas.width.toString());\n        svg.setAttribute('height', this.canvas.height.toString());\n        this._fromData(pointGroups, ({ color, curve }) => {\n            const path = document.createElement('path');\n            if (!isNaN(curve.control1.x) &&\n                !isNaN(curve.control1.y) &&\n                !isNaN(curve.control2.x) &&\n                !isNaN(curve.control2.y)) {\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} `\n                    + `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} `\n                    + `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} `\n                    + `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n                path.setAttribute('d', attr);\n                path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n                path.setAttribute('stroke', color);\n                path.setAttribute('fill', 'none');\n                path.setAttribute('stroke-linecap', 'round');\n                svg.appendChild(path);\n            }\n        }, ({ color, point }) => {\n            const circle = document.createElement('circle');\n            const dotSize = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n            circle.setAttribute('r', dotSize.toString());\n            circle.setAttribute('cx', point.x.toString());\n            circle.setAttribute('cy', point.y.toString());\n            circle.setAttribute('fill', color);\n            svg.appendChild(circle);\n        });\n        const prefix = 'data:image/svg+xml;base64,';\n        const header = '<svg'\n            + ' xmlns=\"http://www.w3.org/2000/svg\"'\n            + ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"'\n            + ` viewBox=\"${minX} ${minY} ${maxX} ${maxY}\"`\n            + ` width=\"${maxX}\"`\n            + ` height=\"${maxY}\"`\n            + '>';\n        let body = svg.innerHTML;\n        if (body === undefined) {\n            const dummy = document.createElement('dummy');\n            const nodes = svg.childNodes;\n            dummy.innerHTML = '';\n            for (let i = 0; i < nodes.length; i += 1) {\n                dummy.appendChild(nodes[i].cloneNode(true));\n            }\n            body = dummy.innerHTML;\n        }\n        const footer = '</svg>';\n        const data = header + body + footer;\n        return prefix + btoa(data);\n    }\n}\n\nexport default SignaturePad;\n","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport SignaturePad from 'signature_pad'\nimport trimCanvas from 'trim-canvas'\n\nexport default class SignatureCanvas extends Component {\n  static propTypes = {\n    // signature_pad's props\n    velocityFilterWeight: PropTypes.number,\n    minWidth: PropTypes.number,\n    maxWidth: PropTypes.number,\n    minDistance: PropTypes.number,\n    dotSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    penColor: PropTypes.string,\n    throttle: PropTypes.number,\n    onEnd: PropTypes.func,\n    onBegin: PropTypes.func,\n    // props specific to the React wrapper\n    canvasProps: PropTypes.object,\n    clearOnResize: PropTypes.bool\n  }\n\n  static defaultProps = {\n    clearOnResize: true\n  }\n\n  _sigPad = null\n\n  _excludeOurProps = () => {\n    let { canvasProps, clearOnResize, ...sigPadProps } = this.props\n    return sigPadProps\n  }\n\n  componentDidMount() {\n    this._sigPad = new SignaturePad(this._canvas, this._excludeOurProps())\n    this._resizeCanvas()\n    this.on()\n  }\n\n  componentWillUnmount() {\n    this.off()\n  }\n\n  // propagate prop updates to SignaturePad\n  componentDidUpdate() {\n    Object.assign(this._sigPad, this._excludeOurProps())\n  }\n\n  // return the canvas ref for operations like toDataURL\n  getCanvas = () => {\n    return this._canvas\n  }\n\n  // return a trimmed copy of the canvas\n  getTrimmedCanvas = () => {\n    // copy the canvas\n    let copy = document.createElement('canvas')\n    copy.width = this._canvas.width\n    copy.height = this._canvas.height\n    copy.getContext('2d').drawImage(this._canvas, 0, 0)\n    // then trim it\n    return trimCanvas(copy)\n  }\n\n  // return the internal SignaturePad reference\n  getSignaturePad = () => {\n    return this._sigPad\n  }\n\n  _checkClearOnResize = () => {\n    if (!this.props.clearOnResize) {\n      return\n    }\n    this._resizeCanvas()\n  }\n\n  _resizeCanvas = () => {\n    let canvasProps = this.props.canvasProps || {}\n    let { width, height } = canvasProps\n    // don't resize if the canvas has fixed width and height\n    if (width && height) {\n      return\n    }\n\n    let canvas = this._canvas\n    /* When zoomed out to less than 100%, for some very strange reason,\n      some browsers report devicePixelRatio as less than 1\n      and only part of the canvas is cleared then. */\n    let ratio = Math.max(window.devicePixelRatio || 1, 1)\n\n    if (!width) {\n      canvas.width = canvas.offsetWidth * ratio\n    }\n    if (!height) {\n      canvas.height = canvas.offsetHeight * ratio\n    }\n    canvas.getContext('2d').scale(ratio, ratio)\n    this.clear()\n  }\n\n  render() {\n    let { canvasProps } = this.props\n    return <canvas ref={(ref) => { this._canvas = ref }} {...canvasProps} />\n  }\n\n  // all wrapper functions below render\n  //\n  on = () => {\n    window.addEventListener('resize', this._checkClearOnResize)\n    return this._sigPad.on()\n  }\n\n  off = () => {\n    window.removeEventListener('resize', this._checkClearOnResize)\n    return this._sigPad.off()\n  }\n\n  clear = () => {\n    return this._sigPad.clear()\n  }\n\n  isEmpty = () => {\n    return this._sigPad.isEmpty()\n  }\n\n  fromDataURL = (dataURL, options) => {\n    return this._sigPad.fromDataURL(dataURL, options)\n  }\n\n  toDataURL = (type, encoderOptions) => {\n    return this._sigPad.toDataURL(type, encoderOptions)\n  }\n\n  fromData = (pointGroups) => {\n    return this._sigPad.fromData(pointGroups)\n  }\n\n  toData = () => {\n    return this._sigPad.toData()\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport SignaturePad from '../signatureSrc/SignatureCanvas'\nimport styles from './styles.css'\nimport { Link } from 'gatsby'\n\nclass Signature extends React.Component {\n  // state = { trimmedDataURL: null }\n  constructor(props) {\n    super(props)\n    this.state = {\n      trimmedDataURL: null\n    }\n  }\n  sigPad = {}\n  clear = () => {\n    this.sigPad.clear()\n  }\n  trim = () => {\n    this.setState({\n      trimmedDataURL: this.sigPad.getTrimmedCanvas()\n        .toDataURL('image/png')\n    })\n  }\n  render() {\n\n    let { trimmedDataURL } = this.state\n    return (\n      <div className={styles.container}>\n        <div className={styles.sigContainer}>\n          <SignaturePad canvasProps={{ className: styles.sigPad }}\n            ref={(ref) => { this.sigPad = ref }} />\n        </div>\n        <div>\n          <Link to='/main/'>\n            <button className={styles.buttons} onClick={this.clear}>\n              Submit\n            </button>\n          </Link>\n        </div>\n        {trimmedDataURL\n          ? <img className={styles.sigImage}\n            src={trimmedDataURL} />\n          : null}\n      </div>\n    )\n  }\n}\n\nexport default Signature\n\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.trimCanvas=t():e.trimCanvas=t()}(this,function(){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var r={};return t.m=e,t.c=r,t.p=\"\",t(0)}([function(e,t){\"use strict\";function r(e){var t=e.getContext(\"2d\"),r=e.width,n=e.height,o=t.getImageData(0,0,r,n).data,f=a(!0,r,n,o),i=a(!1,r,n,o),c=u(!0,r,n,o),d=u(!1,r,n,o),p=d-c+1,l=i-f+1,s=t.getImageData(c,f,p,l);return e.width=p,e.height=l,t.clearRect(0,0,p,l),t.putImageData(s,0,0),e}function n(e,t,r,n){return{red:n[4*(r*t+e)],green:n[4*(r*t+e)+1],blue:n[4*(r*t+e)+2],alpha:n[4*(r*t+e)+3]}}function o(e,t,r,o){return n(e,t,r,o).alpha}function a(e,t,r,n){for(var a=e?1:-1,u=e?0:r-1,f=u;e?f<r:f>-1;f+=a)for(var i=0;i<t;i++)if(o(i,f,t,n))return f;return null}function u(e,t,r,n){for(var a=e?1:-1,u=e?0:t-1,f=u;e?f<t:f>-1;f+=a)for(var i=0;i<r;i++)if(o(f,i,t,n))return f;return null}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=r}])});"],"sourceRoot":""}