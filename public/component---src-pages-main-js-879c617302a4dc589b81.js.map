{"version":3,"sources":["webpack:///./src/pages/main.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["app","Clarifai","App","apiKey","Video","props","_this","_Component","call","this","setRef","webcam","goBack","window","history","back","capture","imageSrc","getScreenshot","setState","imagePreviewUrl","isHidden","state","nameMatch","name","query_format","file","nameResult","_handleSubmit","e","_this2","preventDefault","base64Data","split","models","predict","id","base64","then","response","result","console","log","_handleImageChange","_this3","reader","FileReader","target","files","onloadend","readAsDataURL","toggleHidden","resultTitle","resultColor","render","_this4","$imagePreview","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","src","class","react_webcam__WEBPACK_IMPORTED_MODULE_5___default","audio","height","ref","screenshotFormat","width","vnpmideoConstraints","facingMode","onSubmit","type","onClick","Component","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"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","file":"component---src-pages-main-js-879c617302a4dc589b81.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Webcam from 'react-webcam'\nimport { Link } from 'gatsby'\n\nimport Clarifai from 'clarifai'\n\nimport '../components/styles.css'\n\nconst app = new Clarifai.App({\n  apiKey: 'ef16427578aa4753a5012b7235cbf860',\n})\n\nclass Video extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      nameMatch: 'liza',\n      name: 'none',\n      query_format: '',\n      file: '',\n      imagePreviewUrl: '',\n      nameResult: 'searching',\n      isHidden: false,\n    }\n  }\n\n\n  // https://codepen.io/hartzis/pen/VvNGZP\n  _handleSubmit(e) {\n    e.preventDefault()\n    this.capture()\n\n    // capture\n    const url = this.webcam.getScreenshot()\n\n    // var url = this.state.imagePreviewUrl\n\n    var base64Data = url.split('base64,')[1]\n\n    app.models\n      .predict({ id: 'general' }, { base64: base64Data })\n      .then(response => {\n        const result = response['outputs'][0]['data']['concepts'][0]['name']\n        console.log('return ', response['outputs'][0]['data']['concepts'])\n        this.setState({\n          nameResult: result\n        })\n\n\n        // Database fetch\n        // fetch(url)\n        //   .then(response => response.json())\n        //   .then(json => {\n        //     console.log(json)\n        //     const res_email = json[0]['data']['email']\n        //     const res_twitter = json[0]['data']['twitter']\n\n        //     this.setState({\n        //       email: res_email,\n        //       twitter: res_twitter\n        //     })\n        //     // console.log(json[0])\n        //   })\n      })\n\n    // .then(json => this.setState({ loading: true, msg: json.msg }))\n    // console.log('handle uploading-', base64Data)\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault()\n\n    let reader = new FileReader()\n    let file = e.target.files[0]\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      })\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n\n  setRef = webcam => {\n    this.webcam = webcam\n  }\n\n  goBack = () => {\n    window.history.back()\n  }\n\n  toggleHidden() {\n    this.setState({\n      isHidden: !this.state.isHidden\n    })\n  }\n\n  capture = () => {\n    const imageSrc = this.webcam.getScreenshot()\n    this.setState({\n      imagePreviewUrl: imageSrc, isHidden: true\n    })\n  }\n\n  resultTitle() {\n    if (this.state.nameResult == \"searching\") {\n      return \"ðŸ“¦ Package for Liza ðŸ“¦\"\n    } else if (this.state.nameResult == 'liza') {\n      return \"ðŸŽ‰ Success ðŸŽ‰\"\n    } else {\n      return \"Receiver does not match \"\n    }\n  }\n\n  resultColor() {\n    if (this.state.nameResult == \"searching\") {\n      return \"title\"\n    } else if (this.state.nameResult == 'liza') {\n      return \"green\"\n    } else {\n      return \"red\"\n    }\n  }\n\n  render() {\n    const videoConstraints = {\n      width: 2280,\n      height: 720,\n      facingMode: 'user',\n    }\n\n    let { imagePreviewUrl } = this.state\n    let $imagePreview = null\n    if (imagePreviewUrl) {\n      $imagePreview = (\n        <img\n          className=\"video-preview\"\n          id=\"video_upload_preview\"\n          src={imagePreviewUrl}\n        />\n      )\n    }\n\n    return (<div>\n      <div className=\"video-container\">\n        <div className=\"center\">\n          <h1 class={this.resultColor()}>{this.resultTitle()}</h1>\n\n          {!this.state.isHidden && <Webcam\n            audio={false}\n            height={350}\n            ref={this.setRef}\n            screenshotFormat=\"image/png\"\n            width={550}\n            vnpmideoConstraints={videoConstraints}\n          />}\n\n        </div>\n        <div className=\"previewComponent\">\n          <div className=\"preview-container-video\">\n\n            <div className=\"imgPreview video-preview\">{$imagePreview}</div>\n          </div>\n          {/* shows result */}\n          <div className=\"videoButtons\">\n            <form className=\"video\" onSubmit={e => this._handleSubmit(e)}>\n              <button\n                className=\"button-style\"\n                type=\"submit\"\n                onClick={e => this._handleSubmit(e)}\n              >\n                Submit\n                </button>\n            </form>\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n    )\n  }\n}\n\nexport default Video\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}